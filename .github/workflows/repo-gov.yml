name: Repository Governance

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      runs-on:
        description: Additional required tags for the pipeline agents to use.
        default: '["self-hosted","linux"]'
        required: false
        type: string
      repos:
        description: List of Repositories to apply governance to.
        required: false
        default: '[ { full_name: "self" } ]'
        type: string
      settings_files:
        description: Settings file to apply to the repositories.
        required: false
        default: '[ ".github/settings.yml" ]'
        type: string
      action:
        description: |
          What action to take with this action. One of validate, check, or apply.
          - Validate will validate your settings file, but not touch your repo.
          - Check will check your repo with your settings file and output a report of any drift.
          - Apply will apply the settings in your settings file to your repo.
        default: check
        required: false
        type: string

  workflow_call:
    inputs:
      runs-on:
        description: Additional required tags for the pipeline agents to use.
        default: '["self-hosted","linux"]'
        required: false
        type: string
      repos:
        description: List of Repositories to apply governance to.
        required: false
        default: '[ { full_name: "self" } ]'
        type: string
      settings_files:
        description: Settings file to apply to the repositories.
        required: false
        default: '[ ".github/settings.yml" ]'
        type: string
      action:
        description: |
          What action to take with this action. One of validate, check, or apply.
          - Validate will validate your settings file, but not touch your repo.
          - Check will check your repo with your settings file and output a report of any drift.
          - Apply will apply the settings in your settings file to your repo.
        default: check
        required: false
        type: string

  push:
    paths:
      - '.github/settings.yml'
      - '.github/workflows/repo-gov.yml'

  schedule:
    # Everyday @ 0000 - https://crontab.cronhub.io/
    - cron: '0 0 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "repo-manager"
  repo-manager:
    concurrency:
      group: ${{ matrix.repo }}-${{ matrix.settings_file}}
      cancel-in-progress: true
    strategy:
      matrix:
        repo: ${{ fromJSON( inputs.repos || '[ "self" ]' ) }}
        settings_file: ${{ fromJSON( inputs.settings_files || '[ ".github/settings.yml" ]' ) }}
      fail-fast: false

    name: ${{ matrix.repo }} - ${{ matrix.settings_file }}
    if: ${{ inputs.action != 'skip' }}
    # The type of runner that the job will run on
    runs-on: ${{ fromJSON(inputs.runs-on || '[ "self-hosted", "linux" ]' ) }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Clean Agent Workspace
        uses: mickem/clean-after-action@v2.0.0
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Decrypt Token
      #   uses: cloudposse/github-action-secret-outputs@0.1.2
      #   if: inputs.encrypted-token != 0
      #   id: decrypt-token
      #   with:
      #     ## PASSWORD is a gpg passphrase stored in Github Secrets.
      #     secret: ${{ secrets.PASSWORD }}
      #     op: decode
      #     in: ${{ inputs.encrypted-token }}

      # Runs a single command using the runners shell
      # TODO: We should add a conditional step if automated vs. executed
      - name: Run RepoManager
        if: '!cancelled()' # This is a workaround for a bug in the cancel-in-progress feature
        uses: actuarysailor/gha-repo-manager@v2.2.1
        with:
          repo: ${{ matrix.repo || 'self' }}
          action: ${{ inputs.action || 'apply' }}
          settings_file: ${{ matrix.settings_file }}
          app_id: ${{ vars.GOV_APP_CLIENT_ID }}
          private_key: ${{ secrets.GOV_APP_PVT_KEY }}
